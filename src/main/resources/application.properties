
# --------------------------  Spring server config --------------------------
server.port=8089
server.contextPath=/blog

#--------------------------  banner profiles -------------------------------
spring.main.banner-mode=off
banner.charset=UTF-8
banner.location=classpath:/banner.txt

#--------------------------  spring profiles -------------------------------
# it can be  fast/prod/cloud/system/dev
spring.profiles.active=dev



#--------------------------   spring.datasource ----------------------------
druid.datasource.driverClassName=com.mysql.jdbc.Driver
druid.datasource.url=jdbc:mysql://127.0.0.1:3306/blog-demo?useUnicode=true&amp;characterEncoding=utf-8
druid.datasource.username=root
druid.datasource.password=123456


# 初始化大小，最小，最大
druid.datasource.initialSize=5  
druid.datasource.minIdle=5  
druid.datasource.maxActive=20  
# 配置获取连接等待超时的时间
druid.datasource.maxWait=60000  
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
druid.datasource.timeBetweenEvictionRunsMillis=60000  
# 配置一个连接在池中最小生存的时间，单位是毫秒
druid.datasource.minEvictableIdleTimeMillis=300000  
# 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
druid.datasource.validationQuery=SELECT 'x'  
druid.datasource.testWhileIdle=true  
druid.datasource.testOnBorrow=false  
druid.datasource.testOnReturn=false  
# 打开PSCache，并且指定每个连接上PSCache的大小
druid.datasource.poolPreparedStatements=true  
druid.datasource.maxPoolPreparedStatementPerConnectionSize=20  
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
druid.datasource.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
druid.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000  
# 合并多个DruidDataSource的监控数据
druid.datasource.useGlobalDataSourceStat=true  




#--------------------------   Spting jpa ---------------------------------
spring.jpa.database = MYSQL
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.naming-strategy=org.poem.common.hibernat.NamingStrategy
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.repositories.enabled=true
spring.jpa.show-sql=true



#--------------------------  Spring view ---------------------------------
#这儿已经默认映射到了webapp-pages下，默认的是在webapp下
spring.view.prefix:
spring.view.suffix:.html
spring.view.view-names:pages/*
spring.view.cache:true


#--------------------------   spring.thymeleaf --------------------------
spring.thymeleaf.mode: XHTML
spring.thymeleaf.cache: true



#--------------------------   Spring redis ------------------------------
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1



# --------------------------  日志 --------------------------------------
logging.file=./logs/logs.log
logging.config=classpath:logback.xml



#--------------------------  metrics 权限管理---------------------------
metrics.jmx.enabled: true
metrics.spark.enabled: false
metrics.spark.host: localhost
metrics.spark.port: 9999

metrics.graphite.enabled: false
metrics.graphite.host: localhost
metrics.graphite.port: 2003
metrics.graphite.prefix: blog

#--------------------------  自定义 配置---------------------------
security.user.name=lyw
security.user.password=123456
security.user.role=ADMIN

#--------------------------  Spring security权限管理---------------------
jhipster.security.rememberme.key=21323dhnjbg24j2bh234bv2hvhu24


#--------------------------  flyway配置---------------------
flyway.baselineOnMigrate=true
flyway.locations=classpath:db/migration
flyway.placeholder-prefix=V
flyway.sql-migration-suffix=.sql

#--------------------------数据库GUI管理应用 -----------------------------
spring.h2.console.enabled=true